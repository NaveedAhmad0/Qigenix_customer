{"version":3,"sources":["Admin Panel/Admin-Panel-Pages/Device Invoice/DeviceInvoice.js"],"names":["DeviceInvoice","ref","React","createRef","useState","tableRowsData","setTableRowsData","loading","token","localStorage","getItem","CustId","fetchData","useHistory","console","log","data","JSON","stringify","customer_id","config","method","url","headers","Authorization","axios","then","response","catch","error","useEffect","className","style","height","color","size","speedMultiplier","invoice_id","firstName","lastName","moment","createdAt","local","format","class","scope","device_brand","amount","tax_percentage","Number","targetRef","filename","toPdf","onClick"],"mappings":"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","file":"static/js/38.a79fc8fd.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport ToolkitProvider, {\n  Search,\n  CSVExport,\n} from \"react-bootstrap-table2-toolkit\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport DataTable from \"react-data-table-component\";\nimport { useHistory } from \"react-router-dom\";\nimport API from \"../../../backend\";\nimport \"./DeviceInvoices.css\";\nimport moment from \"moment\";\nimport Pdf from \"react-to-pdf\";\n\n\nfunction DeviceInvoice() {\n  const ref = React.createRef();\n  const [tableRowsData, setTableRowsData] = useState();\n\n  const [loading, setLoading] = useState(false);\n  const [toggle, setToggle] = useState(false);\n\n  const token = localStorage.getItem(\"token\");\n  const CustId = localStorage.getItem(\"customerId\");\n\n  const history = useHistory();\n\n  const fetchData = async () => {\n    console.log(CustId);\n    const data = JSON.stringify({\n      customer_id: CustId,\n    });\n    try {\n      var config = {\n        method: \"post\",\n        url: `https://qigenix.ixiono.com/apis/users/get-invoice`,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `${token}`,\n        },\n        data: data,\n      };\n      axios(config)\n        .then((response) => {\n          console.log(response.data);\n          setTableRowsData(response.data);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  useEffect(() => {}, [tableRowsData]);\n\n  // useEffect(() => {\n  // \tfetchInvoiceData();\n  // }, [invId]);\n\n  return (\n    <div>\n      {/* <MerchantForm /> */}\n      {loading ? (\n        <div className=\"row\" style={{ height: \"500px\" }}>\n          <div className=\"col-12 text-center my-auto\">\n            <ClipLoader color=\"#136be0\" size={100} speedMultiplier={1} />\n          </div>\n        </div>\n      ) : (\n        <div>\n          <div className=\"row\">\n            <h4>List Of Invoices</h4>\n            <div>\n              <div className=\"card\" ref={ref}>\n                <div className=\"card-body\">\n                  <div className=\"col-12 grid-margin\">\n                    <div className=\"row mt-4\">\n                      <div className=\"col-6\">\n                        <h5 className=\"text-primary float-left\">\n                          {tableRowsData?.invoice_id}\n                        </h5>\n                      </div>\n                      <div className=\"col-6 text-right\">\n                        <p className=\"font-weight-bold\">\n                          Bill To :\n                          <p className=\"text-primary\">\n                            {tableRowsData?.firstName} {tableRowsData?.lastName}\n                          </p>\n                        </p>\n\n                        <p className=\"font-weight-bold\">\n                          Invoice Date:{\" \"}\n                          <span className=\"font-weight-normal\">\n\t\t\t\t\t\t  {\n         moment(tableRowsData?.createdAt).local().format(\"DD-MM-YYYY hh:mm:ss \")\n      }\n                          </span>{\" \"}\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <table class=\"table\">\n                        <thead className=\"bg-dark text-white\">\n                          <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Item</th>\n\n                            <th scope=\"col\">Rate</th>\n                            <th scope=\"col\">Tax</th>\n                            <th scope=\"col\">Amount</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          <tr>\n                            <td>{tableRowsData?.invoice_id}</td>\n\n                            <td>{tableRowsData?.device_brand}</td>\n                            <td>{tableRowsData?.amount}</td>\n                            <td>{tableRowsData?.tax_percentage}</td>\n                            <td>{tableRowsData?.amount}</td>\n                          </tr>\n                        </tbody>\n                      </table>\n\n                      <table class=\"table table-bordered mt-5\">\n                        <tr>\n                          <th scope=\"col\" className=\"text-dark\">\n                            Sub Total :\n                          </th>\n                          <td>\n                            {(Number(tableRowsData?.amount) *\n                              Number(tableRowsData?.tax_percentage)) /\n                              100 +\n                              Number(tableRowsData?.amount)}\n                          </td>\n                        </tr>\n                        <tr>\n                          <th className=\"text-dark\">Total :</th>\n                          <td>\n                            {(Number(tableRowsData?.amount) *\n                              Number(tableRowsData?.tax_percentage)) /\n                              100 +\n                              Number(tableRowsData?.amount)}\n                          </td>\n                        </tr>\n                        <tr>\n                          <th className=\"text-danger\">Amount Due :</th>\n                          <td>\n                            {(Number(tableRowsData?.amount) *\n                              Number(tableRowsData?.tax_percentage)) /\n                              100 +\n                              Number(tableRowsData?.amount)}\n                          </td>\n                        </tr>\n                      </table>\n\n                      <div className=\"row\">\n                        <div className=\"col-12 \">\n                          <Pdf targetRef={ref} filename=\"invoice.pdf\">\n                            {({ toPdf }) => (\n                              <button\n                                className=\"btn btn-success mt-4\"\n                                onClick={toPdf}\n                              >\n                                Generate Pdf\n                              </button>\n                            )}\n                          </Pdf>\n                          {/* <button className=\"btn btn-success mt-4\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tPrint\n\t\t\t\t\t\t\t\t\t\t\t\t\t</button> */}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\nexport default DeviceInvoice;\n"],"sourceRoot":""}